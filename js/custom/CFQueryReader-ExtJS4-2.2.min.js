Ext.define("ColdFusion.data.reader.CFQueryReader",{extend:"Ext.data.reader.Array",alternateClassName:"ColdFusion.data.CFQueryReader",alias:"reader.cfquery",query:"QUERY",totalProperty:"TOTALROWCOUNT",readRecords:function(a){var b=this,c,d,e=true;if(a.DATA&&a.COLUMNS){var f=new Object;f["QUERY"]=Ext.Object.merge({},a);a=f}var g=this.model.prototype.fields.items;if(a.metaData){b.onMetaChange(a.metaData);if(a.metaData.fields)e=false}if(e){c=b.getQuery(a);try{if(Ext.isObject(c)){if(c.DATA&&Ext.isArray(c.DATA)&&c.COLUMNS&&Ext.isArray(c.COLUMNS)){for(var h=0;h<=c.COLUMNS;h++){c.COLUMNS[h]=c.COLUMNS[h].toUpperCase()}for(var h=0;h<g.length;h++){var i=Ext.Array.indexOf(c.COLUMNS,g[h].name.toUpperCase());if(i>=0){g[h].mapping=Ext.Array.indexOf(c.COLUMNS,g[h].name.toUpperCase())}}if(b.model){b.model.setFields(g,b.idProperty);b.setModel(b.model,true)}}else{throw"The 'query' is not properly mapped to the response."}}else{throw"A 'query' is not defined in the server output."}}catch(j){d=new Ext.data.ResultSet({total:0,count:0,records:[],success:false,message:j});this.fireEvent("exception",this,a,d);Ext.Logger.warn(j);return d}}this.jsonData=a;return this.callParent([a])},buildExtractors:function(){var a=this;a.callParent(arguments);if(a.query&&!a.root){a.root=a.query}if(a.root){var b=a.root.split(".");if(b[b.length-1]==="DATA"){b.pop()}b=b.join(".");a.query=b;a.getQuery=a.createAccessor(a.query);a.root=b.length?b+".DATA":"DATA";a.getRoot=a.createAccessor(a.root)}else{a.getRoot=function(a){return a}}}})